// Generated by CoffeeScript 1.4.0
(function() {

  module("DataTable");

  test('can create a DataTable from a single record, and it has one row', function() {
    var dt, record;
    record = {
      a: 1,
      b: 2,
      c: 3
    };
    dt = new Psy.DataTable.fromRecords([record]);
    return equal(dt.nrow(), 1);
  });

  test('can create a DataTable from a two records, and it has two rows', function() {
    var dt, records;
    records = [
      {
        a: 1,
        b: 2,
        c: 3
      }, {
        a: 1,
        b: 2,
        c: 3
      }
    ];
    dt = new Psy.DataTable.fromRecords(records);
    return equal(dt.nrow(), 2);
  });

  test('can create a DataTable from a two records, with partially overlapping keys', function() {
    var dt, records;
    records = [
      {
        a: 1,
        b: 2,
        c: 3
      }, {
        b: 2,
        c: 3,
        x: 7
      }
    ];
    dt = new Psy.DataTable.fromRecords(records);
    equal(dt.ncol(), 4);
    return equal(dt.nrow(), 2);
  });

  test('can concatenate two DataTables with different column names with rbind, union=true', function() {
    var dt1, dt2, dt3;
    dt1 = new Psy.DataTable({
      a: [1, 2, 3],
      b: [5, 6, 7]
    });
    dt2 = new Psy.DataTable({
      a: [1, 2, 3],
      d: [5, 6, 7]
    });
    dt3 = Psy.DataTable.rbind(dt1, dt2, true);
    equal(3, dt3.ncol());
    return equal(6, dt3.nrow());
  });

  module("TaskSpec");

  test('TaskSpec correctly extracts names of its inputs', function() {
    var fspec1, fspec2, fspec3, tspec;
    fspec1 = new Psy.FactorSpec(1, 1, "a", [1, 2, 3]);
    fspec2 = new Psy.FactorSpec(1, 1, "b", [5, 7, 9, 21]);
    fspec3 = new Psy.FactorSpec(1, 1, "dddd", [5, 7, 9, 21]);
    tspec = new Psy.TaskSpec([fspec1, fspec2, fspec3], []);
    equal(["a", "b", "dddd"].toString(), tspec.varnames.toString());
    return equal(tspec.varmap["a"].levels.toString(), [1, 2, 3].toString());
  });

}).call(this);
