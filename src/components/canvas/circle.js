// Generated by CoffeeScript 1.6.3
(function() {
  var Circle, Stimulus, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Stimulus = require("../../stimresp").Stimulus;

  Circle = (function(_super) {
    __extends(Circle, _super);

    function Circle() {
      _ref = Circle.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Circle.prototype.defaults = {
      x: 0,
      y: 0,
      radius: 50,
      fill: 'red',
      opacity: 1,
      origin: "top-left"
    };

    Circle.prototype.render = function(context, layer) {
      var circ, coords;
      console.log("rendering circle");
      circ = new Kinetic.Circle({
        x: 0,
        y: 0,
        radius: this.spec.radius,
        fill: this.spec.fill,
        stroke: this.spec.stroke,
        strokeWidth: this.spec.strokeWidth,
        opacity: this.spec.opacity
      });
      coords = this.computeCoordinates(context, this.spec.position, circ.getWidth(), circ.getHeight());
      circ.setPosition({
        x: coords[0] + circ.getWidth() / 2,
        y: coords[1] + circ.getHeight() / 2
      });
      return layer.add(circ);
    };

    return Circle;

  })(Stimulus);

  exports.Circle = Circle;

}).call(this);
