// Generated by CoffeeScript 1.6.3
(function() {
  var MultipleChoice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MultipleChoice = (function(_super) {
    __extends(MultipleChoice, _super);

    MultipleChoice.prototype.defaults = {
      question: "What is your name?",
      options: ["Bill", "John", "Fred"],
      x: 10,
      y: 10,
      fill: "black",
      fontSize: 24,
      fontFamily: "Arial",
      textAlign: "center",
      position: null
    };

    function MultipleChoice(spec) {
      var i;
      MultipleChoice.__super__.constructor.call(this, spec);
      this.questionText = new Kinetic.Text({
        x: this.spec.x,
        y: this.spec.y,
        text: this.spec.question,
        fontSize: this.spec.fontSize,
        fontFamily: this.spec.fontFamily,
        fill: this.spec.fill
      });
      this.choices = (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = this.spec.options.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(new Kinetic.Text({
            x: this.spec.x + 5,
            y: questionText.getHeight() * (i + 1) + 30,
            text: (i + 1) + ") " + this.spec.options[i],
            fontSize: this.spec.fontSize,
            fontFamily: this.spec.fontFamily,
            fill: this.spec.fill,
            padding: 20,
            align: 'left'
          }));
        }
        return _results;
      }).call(this);
    }

    MultipleChoice.prototype.render = function(context, layer) {
      var i, _i, _ref, _results;
      layer.add(this.questionText);
      _results = [];
      for (i = _i = 0, _ref = this.choices.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(layer.add(this.choices[i]));
      }
      return _results;
    };

    return MultipleChoice;

  })(Stimulus);

  exports.MultipleChoice = MultipleChoice;

}).call(this);
