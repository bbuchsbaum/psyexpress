// Generated by CoffeeScript 1.6.3
(function() {
  var Q, Response, Timeout, utils, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  utils = require("../utils");

  Q = require("q");

  Response = require("../stimresp").Response;

  Timeout = (function(_super) {
    __extends(Timeout, _super);

    function Timeout() {
      _ref = Timeout.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Timeout.prototype.defaults = {
      duration: 1000
    };

    Timeout.prototype.activate = function(context) {
      var deferred,
        _this = this;
      deferred = Q.defer();
      utils.doTimer(this.spec.duration, function(diff) {
        return deferred.resolve({
          timeout: diff,
          requested: _this.spec.duration
        });
      });
      return deferred.promise;
    };

    return Timeout;

  })(Response);

  exports.Timeout = Timeout;

}).call(this);
